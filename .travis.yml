
language: cpp

sudo: required	

env:
  global:
    - BUILD_TYPE=Release

matrix:

  include:

    # ///////////////////////////////// osx 10.13
    
#    - os: osx
#      osx_image: xcode9.4 #10.13
#      compiler: clang
#      if: tag IS present
#      env: [
#        PYTHON_VERSION=2.7.15,
#        APPLE_OSX_VERSION=10.13,
#        COMPILER=clang++,
#        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/2.7.15/bin/python ,
#        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/2.7.15/include/python2.7,
#        PYTHON_LIBRARY=$HOME/.pyenv/versions/2.7.15/lib/libpython2.7.dylib
#      ]
#
#    - os: osx
#      osx_image: xcode9.4 #10.13
#      compiler: clang
#      env: [
#        PYTHON_VERSION=3.6.6,
#        APPLE_OSX_VERSION=10.13,
#        COMPILER=clang++,
#        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/3.6.6/bin/python ,
#        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/3.6.6/include/python3.6m,
#        PYTHON_LIBRARY=$HOME/.pyenv/versions/3.6.6/lib/libpython3.6m.dylib
#      ]
#
#    - os: osx
#      osx_image: xcode9.4
#      compiler: clang
#      if: tag IS present
#      env: [
#        PYTHON_VERSION=3.7.0,
#        APPLE_OSX_VERSION=10.13,
#        COMPILER=clang++,
#        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/3.7.0/bin/python ,
#        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/3.7.0/include/python3.7m,
#        PYTHON_LIBRARY=$HOME/.pyenv/versions/3.7.0/lib/libpython3.7m.dylib
#      ]
      
    # ///////////////////////////////// osx 10.12 
    
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present
      env: [
        APPLE_OSX_VERSION=10.12,
        COMPILER=clang++,
        PYTHON_VERSION=2.7.15,
        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/2.7.15/bin/python ,
        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/2.7.15/include/python2.7,
        PYTHON_LIBRARY=$HOME/.pyenv/versions/2.7.15/lib/libpython2.7.dylib
      ]   
       
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present
      env: [
        APPLE_OSX_VERSION=10.12,
        COMPILER=clang++,
        PYTHON_VERSION=3.6.6,
        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/3.6.6/bin/python ,
        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/3.6.6/include/python3.6m,
        PYTHON_LIBRARY=$HOME/.pyenv/versions/3.6.6/lib/libpython3.6m.dylib
      ]    

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      if: tag IS present
      env: [
        APPLE_OSX_VERSION=10.12,
        COMPILER=clang++,
        PYTHON_VERSION=3.7.0,
        PYTHON_EXECUTABLE=$HOME/.pyenv/versions/3.7.0/bin/python ,
        PYTHON_INCLUDE_DIR=$HOME/.pyenv/versions/3.7.0/include/python3.7m,
        PYTHON_LIBRARY=$HOME/.pyenv/versions/3.7.0/lib/libpython3.7m.dylib
      ]     
      
#    # ///////////////////////////////// Ubuntu 14.04
#
#    - os: linux
#      dist: trusty
#      if: tag IS present
#      env: [
#          PYTHON_VERSION=2.7,
#          COMPILER=g++-4.9,
#          PYTHON_INCLUDE_DIR=/usr/include/python2.7,
#          PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so,
#          PYTHON_EXECUTABLE=/usr/bin/python2.7
#        ]
#      addons:
#        apt:
#          packages: ['g++-4.9']
#          sources: ['ubuntu-toolchain-r-test']
#
#    - os: linux
#      dist: trusty
#      env: [
#          PYTHON_VERSION=3.6,
#          COMPILER=g++-4.9,
#          PYTHON_INCLUDE_DIR=/usr/include/python3.6m,
#          PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so,
#          PYTHON_EXECUTABLE=/usr/bin/python3.6
#        ]
#      addons:
#        apt:
#          packages: ['g++-4.9']
#          sources: ['ubuntu-toolchain-r-test']
#
#    - os: linux
#      dist: trusty
#      if: tag IS present
#      env: [
#          PYTHON_VERSION=3.4,
#          COMPILER=g++-4.9,
#          PYTHON_INCLUDE_DIR=/usr/include/python3.4m,
#          PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.4m.so,
#          PYTHON_EXECUTABLE=/usr/bin/python3.4
#        ]
#      addons:
#        apt:
#          packages: ['g++-4.9']
#          sources: ['ubuntu-toolchain-r-test']
#
#    - os: linux
#      dist: trusty
#      if: tag IS present
#      env: [
#          PYTHON_VERSION=3.5,
#          COMPILER=g++-4.9,
#          PYTHON_INCLUDE_DIR=/usr/include/python3.5m,
#          PYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so,
#          PYTHON_EXECUTABLE=/usr/bin/python3.5
#        ]
#      addons:
#        apt:
#          packages: ['g++-4.9']
#          sources: ['ubuntu-toolchain-r-test']
               
    
script:
    - | 
      if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then   
        # python
        cd $HOME     
        curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer -O 
        chmod a+x pyenv-installer 
        ./pyenv-installer 
        rm ./pyenv-installer 
        export PATH="$HOME/.pyenv/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
        CONFIGURE_OPTS=--enable-shared pyenv install -s $PYTHON_VERSION    
        CONFIGURE_OPTS=--enable-shared pyenv global     $PYTHON_VERSION 
        sudo python -m pip install --upgrade pip
        sudo python -m pip install --upgrade numpy   
        #  brew install dependencies
        brew install swig libxml2
        cd "${TRAVIS_BUILD_DIR}" && mkdir build && cd build 
        cmake -GXcode \
        	-DPYTHON_VERSION=${PYTHON_VERSION} \
        	-DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE} \
        	-DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR} \
        	-DPYTHON_LIBRARY=${PYTHON_LIBRARY} \
        	../
        set -o pipefail &&  cmake --build ./ --target ALL_BUILD   --config $BUILD_TYPE | xcpretty -c

        # if there is a tag , create the wheel  
        if [ -n "$TRAVIS_TAG" ]; then 
        		cmake --build ./  --target install         --config $BUILD_TYPE
        		cmake --build ./  --target bdist_wheel     --config $BUILD_TYPE 
        		cmake --build ./  --target sdist           --config $BUILD_TYPE 
        		# cmake --build ./  --target pypi            --config $BUILD_TYPE
        fi
      fi 
    - |     
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then 
        #  install patchelf
        curl -L https://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.gz -o /tmp/patchelf-0.9.tar.gz
        cd /tmp
        tar xvzf patchelf-0.9.tar.gz && cd patchelf*
        ./configure 
        make 
        sudo make install
        export PATH=$PATH:/usr/local/bin
        #  install linux dependencies
        sudo add-apt-repository -y ppa:deadsnakes/ppa
        sudo apt-get -qy update
        sudo apt-get -qy install --allow-unauthenticated swig3.0 git cmake libxml2 python${PYTHON_VERSION} python${PYTHON_VERSION}-dev
        curl -L https://bootstrap.pypa.io/get-pip.py -o /tmp/get-pip.py
        sudo -H python${PYTHON_VERSION} /tmp/get-pip.py
        sudo -H python${PYTHON_VERSION} -m pip install --upgrade pip
        sudo -H python${PYTHON_VERSION} -m pip install --upgrade numpy

        # Download and install recent cmake
        CMAKE_URL="http://www.cmake.org/files/v3.4/cmake-3.4.3-Linux-x86_64.tar.gz"
        mkdir -p ${TRAVIS_BUILD_DIR}/deps/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${TRAVIS_BUILD_DIR}/deps/cmake
        export PATH=${TRAVIS_BUILD_DIR}/deps/cmake/bin:${PATH} 

        cd "${TRAVIS_BUILD_DIR}" 
        mkdir build 
        cd build  
        cmake \
        	-DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
        	-DPYTHON_VERSION=${PYTHON_VERSION} \
        	-DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE} \
        	-DPYTHON_INCLUDE_DIR=${PYTHON_INCLUDE_DIR} \
        	-DPYTHON_LIBRARY=${PYTHON_LIBRARY} \
        	../
        cmake --build ./ --target all
        cmake --build ./ --target test
        # if there is a tag, create the wheel and tar.gz
        if [ -n "$TRAVIS_TAG" ]; then 
        		cmake --build ./ --target install
        		cmake --build ./ --target bdist_wheel
        		cmake --build ./ --target sdist 
        		# not uploading to PyPi since it will be refused (not using manylinux) 
        		# cmake --build ./  --target pypi 
        fi
      fi    

before_deploy:
  - export WHEEL_FILE=$(find ${TRAVIS_BUILD_DIR}/build/install/dist -iname "*.whl")
  - export SDIST_FILE=$(find ${TRAVIS_BUILD_DIR}/build/install/dist -iname "*.tar.gz")

#deploy:
#  provider: releases
#  api_key:
#    secure: vvs+N/XwsigYj6pZIR0Lksg+FnA2M7bCy4aHj7at1nPOtX3ZHHdkSgIyd06awkiWSNg++fM6GIi7ewU+ftX9rGxgRFG5eWIKQyuHHPvNSIIcJe1cY7440Y6Kb2p58BFeGQxLJl0y3XlCObPW7yMoY7h9i6kTL6w7k3NkdWkFpdDaNXXEaGnzeoaM6u+iBmgAWgX9Ozlu+ogjFpw5b7QPtKgi1Bey/IbIeVWExuFnXsTJe3MDobdFvgJ0tewErnWAey3V8IXQzVMqdOIAl+xtu3RMmsdNymDAZpof31wFNLCr7BMmIg/O2QW1tnvNXuFX9Gpry5CKb7i0oxthiLyNTkh2sZQcAJcBdWJlP4LiSCBoJ2HuAc5XSqss8aXt/hHAzL3ICPtd6wVPlHEMK1+/EsC4WcO5X0ngzmGnn8eceIBFJiqYhI+c85GqUWPrFw+REKUsAwthMK0tNErruWZR1uubYnlyQYHpSaPdKie6o0aWK8Xit+GN3jkcqRrhQDwX3WFLxw2N07eh/f3vCD4m7GwRJfi5LXDuoLp3Qg5w23gi4ewp71v9oTZNT4K3vVEYuwzCyglppjyszQDvBAwxgxnWtSZh2nGEtwtDL5dRiIXehqfaK7mRKQ8iZwpQkuyTD+rsl45nTuNjeKYC3BLHd+NZhJI8qmcD6oykt+oxzjg=
#  file:
#    - $WHEEL_FILE
#    - $SDIST_FILE
#  skip_cleanup: true
#  on:
#    repo: sci-visus/XIDX
#    tags: true
#    all_branches: true

notifications:
  email: false

branches:
  only:
    - master
